---
layout: post
title: Speaking My Mind
---

h1. {{ page.title }}

It took me a while, but I finally figured out how to switch my github credentials back and forth between my home github account and my work github account. Up until that point,
I would often assign my work github user as a collaborator on my home repos. This isn't as clean a separation as I would like, so once I could switch users I made sure I was the correct user
before accessing my home or work github accounts. This worked fine, but it bothered me a bit that my work user was a collaborator on *some* of my repos and that I didn't remember which ones.

So I <a href="http://developer.github.com/v3/auth/#basic-authentication">read up on it</a> and <a href="https://gist.github.com/JohnB/7066490">wrote a script</a> 
(after setting up <a href="https://github.com/settings/applications">my OAuth command-line credentials</a>), learning a few things along the way about the github API.

h2. OAuth Command-line Credentials

These are very dangerous. They allow anyone with this long hex string to access and change any of your
repositories. Luckily, if they are compromised, it is easy to delete the token and create a new one.

Using a desktop or laptop browser (don't try it on an iPad or iPhone - it doesn't allow you to copy the OAuth token), go to 
<a href="https://github.com/settings/applications">your settings page</a>, create a new Personal Access Token, and copy it to your clipboard.

h2. Adding your Credential to the Environment

I've set up my script to use the GH environment variable. This keeps me from ever accidentally committing a script that includes my OAuth token.
If you run this script a lot, you may want to add it to your `.bashrc` file but for now we'll just leave it in the environment:

`export GH=abc123...`

h2. Manual Verification

Just to make sure it works, we can use the `curl` command to get your user information (this is just like <a href="http://developer.github.com/v3/auth/#basic-authentication">
what the Github docs say</a>).

`curl -u $GH https://api.github.com/user`

It should show you a bunch of JSON data describing your github user.

h2. Automatically Checking your Collaborators

Just download <a href="https://gist.github.com/JohnB/7066490">my gist</a> as `collaborators.rb` and then run it:

`ruby collaborators.rb`

Assuming everything is set up, you'll see the output from `curl` as it queries each repository and then lists the repository URL along with the list of collaborators.

